name: nightly integration (linux)

on:
  schedule:
  - cron: "0 10 * * *"
  workflow_dispatch:
    inputs:
      skaffold_commit:
        description: Use Skaffold binary for commit or latest
        default: latest
        required: false

jobs:
  build:
    name: integration tests on linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # <https://github.com/actions/virtual-environments>
        # pre-installed on linux: bazel, docker, helm, gcloud-sdk, gradle, kubectl, maven, minikube(!)
        kustomize_version: [3.8.10]
        ko_version: [0.8.0]
        kompose_version: [1.22.0]
        container_structure_tests_version: [1.10.0]
        minikube_version: [latest]
        integration_test_partitions: [0, 1, 2, 3]
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Skaffold binary version 
      run: |
        if [ -n "${{ github.event.inputs.skaffold_commit }}" ]; then
          echo SKAFFOLD_VERSION="${{ github.event.inputs.skaffold_commit }}" >> $GITHUB_ENV
        else
          echo SKAFFOLD_VERSION="$(git log --format="%H" -n 1)" >> $GITHUB_ENV
        fi

    - name: Install Kustomize
      run: |
        curl -Lo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${{ matrix.kustomize_version }}/kustomize_v${{ matrix.kustomize_version }}_linux_amd64.tar.gz
        sudo tar -xvf kustomize.tar.gz -C /usr/local/bin/

    - name: Install Ko
      run: |
        curl -Lo ko.tar.gz https://github.com/google/ko/releases/download/v${{ matrix.ko_version }}/ko_${{ matrix.ko_version }}_Linux_x86_64.tar.gz
        sudo tar -xvf ko.tar.gz -C /usr/local/bin/

    - name: Install Kompose
      run: |
        curl -Lo kompose https://github.com/kubernetes/kompose/releases/download/v${{ matrix.kompose_version }}/kompose-linux-amd64 && chmod +x kompose
        sudo mv kompose /usr/local/bin/

    - name: Configure GCloud with Docker
      run:  sudo gcloud auth configure-docker

    - name: Install Container Structure Test
      run: |
        curl -Lo container-structure-test https://storage.googleapis.com/container-structure-test/v${{ matrix.container_structure_tests_version }}/container-structure-test-linux-amd64 && chmod +x container-structure-test
        sudo mv container-structure-test /usr/local/bin/

    - name: Setup other files and permissions
      run: |
        sudo chown $(whoami) /home/$(whoami)/.config/gcloud -R
        sudo chmod g+rw /home/$(whoami)/.config/gcloud -R
        sudo chown $(whoami):docker /home/$(whoami)/.docker -R
        sudo chmod g+rw /home/$(whoami)/.docker -R
        echo '{}' > /home/$(whoami)/.docker/config.json
        mkdir -p /home/$(whoami)/.m2/ && cp ./hack/maven/settings.xml /home/$(whoami)/.m2/settings.xml

    - name: Install Minikube and start cluster
      run: |
        if [ "${{ matrix.minikube_version }}" = "latest" ]; then
          curl -Lo minikube https://storage.googleapis.com/minikube/latest/minikube-darwin-amd64
        else
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/v${{ matrix.minikube_version }}/minikube-darwin-amd64
        fi
        sudo install minikube /usr/local/bin/minikube
        minikube start --profile=minikube --driver=docker

    - name: Install Skaffold release binary
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/builds/${{ env.SKAFFOLD_VERSION }}/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/skaffold

    - name: Run integration tests
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        echo "skaffold version: $(skaffold version)"
        skaffold config set --global collect-metrics false
        sudo IT_PARTITION=${{ matrix.integration_test_partitions }} make integration-tests
